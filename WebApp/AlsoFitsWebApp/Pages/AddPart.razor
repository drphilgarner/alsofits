@page "/addpart"
@inject HttpClient Http
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@using AlsoFits.core.Model



<h1>Add a part that fits multiple vehicles</h1>


<RadzenAutoComplete Data=@allParts TextProperty="FullName" Placeholder="name a part..." FilterOperator="StringFilterOperator.Contains" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Style="margin-bottom: 20px" Change=@(args => OnPartCategoryAutocompleteChange(args, "AutoCompletePart")) />


<RadzenAutoComplete Data=@allModels Name="AutoCompleteSourceModel" TextProperty="CompoundName" Placeholder="for a..." FilterOperator="StringFilterOperator.Contains" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Style="margin-bottom: 20px" Change=@(args => OnModelAutocompleteChange(args, "AutoCompleteSourceModel")) />

<p>also fits a</p>

<RadzenAutoComplete Data=@allModels Name="AutoCompleteDestinationModel" TextProperty="CompoundName" Placeholder="find a model" FilterOperator="StringFilterOperator.Contains" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Style="margin-bottom: 20px" Change=@(args => OnModelAutocompleteChange(args, "AutoCompleteDestinationModel")) />

<button class="btn btn-primary" @onclick="SaveAlsofits">Save</button>



@code {
    private PartCategoryChild[] allParts;
    private Model[] allModels;
    public int selectedManufacturerId {get;set;}

    private int selectedPartCategoryParentId;
    private int selectedModelId;

    private int selectedPartCategoryChildId;
    
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine($"Connecting to {Configuration["apiHostUri"]}");
        
        
        //load all parts
        allParts = await Http.GetFromJsonAsync<PartCategoryChild[]>($"{Configuration["apiHostUri"]}/PartsCategory/all");


        //load all models
        allModels = await Http.GetFromJsonAsync<Model[]>($"{Configuration["apiHostUri"]}/Model/all");



        
    }

    public void OnPartCategoryAutocompleteChange(object value, string name)
    {

    }


    public void OnModelAutocompleteChange(object value, string name)
    {

    }

    public void SaveAlsofits()
    {
        
    }


}