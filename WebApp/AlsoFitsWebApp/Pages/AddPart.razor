@page "/addpart"
@inject HttpClient Http
@using Microsoft.Extensions.Configuration;

@inject IConfiguration Configuration
@using AlsoFits.core.Model
@using AlsoFits.core.Tools



<h1>Add a part that fits multiple vehicles</h1>
<EditForm Model="@AddPartFormModel" OnValidSubmit="@HandleValidSubmit">
    
    <DataAnnotationsValidator />
    <ValidationSummary />

<RadzenAutoComplete Data=@allParts TextProperty="FullName" Placeholder="name a part..." FilterOperator="StringFilterOperator.Contains" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Style="margin-bottom: 20px" Change=@(args => OnPartCategoryAutocompleteChange(args, "AutoCompletePart")) />


<RadzenAutoComplete Data=@allModels Name="AutoCompleteSourceModel" TextProperty="CompoundName" Placeholder="for a..." FilterOperator="StringFilterOperator.Contains" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Style="margin-bottom: 20px" Change=@(args => OnSourceModelAutocompleteChange(args, "AutoCompleteSourceModel")) />

<p>also fits a</p>

<RadzenAutoComplete Data=@allModels Name="AutoCompleteDestinationModel" TextProperty="CompoundName" Placeholder="find a model" FilterOperator="StringFilterOperator.Contains" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Style="margin-bottom: 20px" Change=@(args => OnDestinationModelAutocompleteChange(args, "AutoCompleteDestinationModel")) />

<br/>
@* Description *@
<label>any helpful additional notes we can use?
<InputText id="description" @bind-Value="AddPartFormModel.Description" placeholder="description" />
</label>
<br/>
<label>Part number 1
    <InputText id="partnumber1" @bind-Value="AddPartFormModel.PartNumber1" placeholder="e.g 219-323-00-91A" />
</label>

<br/>
<label>Part number 2 (optional)
    <InputText id="partnumber2" @bind-Value="AddPartFormModel.PartNumber2" placeholder="e.g 219-323-00-91A" />
</label>

<br/>
<label>Part number 3 (optional)
    <InputText id="partnumber3" @bind-Value="AddPartFormModel.PartNumber3" placeholder="e.g 219-323-00-91A" />
</label>


<br/>
@* URI *@
<InputText id="pdpurl" @bind-Value="AddPartFormModel.PdpUrl" placeholder="link to part" />


<br/>
@* Currency *@
<label>Currency
    <InputSelect @bind-Value="selectedCurrency">
                <option value="£">£</option>
                <option value="$">$</option>
                <option value="€">€</option>
            </InputSelect>
</label>

@* Price *@
<label>Typical price
<InputNumber id="price" @bind-Value="AddPartFormModel.Price" placeholder="9.99" />
</label>

<br/>
<button type="submit" class="btn btn-primary" @onclick="SaveAlsofits">Save</button>

</EditForm>


@code {
    private PartCategoryChild[] allParts;
    private Model[] allModels;

    public AddPartFormModel AddPartFormModel { get; set; } = new AddPartFormModel();

    private string selectedCurrency = "£";  

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine($"Connecting to {Configuration["apiHostUri"]}");
        
        
        //load all parts
        allParts = await Http.GetFromJsonAsync<PartCategoryChild[]>($"{Configuration["apiHostUri"]}/PartsCategory/all");


        //load all models
        allModels = await Http.GetFromJsonAsync<Model[]>($"{Configuration["apiHostUri"]}/Model/all");
    }

    public void OnPartCategoryAutocompleteChange(object value, string name)
    {
        Console.WriteLine(value);
        AddPartFormModel.PartCategory = value.ToString();
    }


    public void OnSourceModelAutocompleteChange(object value, string name)
    {
        Console.WriteLine(value);

        var validModel = allModels.FirstOrDefault(t => t.CompoundName == value.ToString());
        
        if (validModel != null)
            AddPartFormModel.SourceModelId = validModel.ModelId;
    }

    public void OnDestinationModelAutocompleteChange(object value, string name)
    {
        Console.WriteLine(value);
        
        var validModel = allModels.FirstOrDefault(t => t.CompoundName == value.ToString());
        
        if (validModel != null)
            AddPartFormModel.DestinationModelId = validModel.ModelId;
    }
    public void SaveAlsofits()
    {
        
        AddPartFormModel.CurrencySymbol = selectedCurrency;


        var debugModel = AddPartFormModel.PropertyList();

        Console.WriteLine(debugModel);
    }

    public void HandleValidSubmit()
    {

    }





}